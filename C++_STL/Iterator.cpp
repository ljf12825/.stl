//迭代器是访问容器中元素的一个重要工具。它们为程序提供了一种统一的方式来遍历不同容器中的元素，而不需要知道容器的底层实现
//迭代器是一个类，它提供了访问容器元素的接口。
//迭代器可以像指针一样移动、解引用、比较等
//它们提供了一个抽象层，使你能够以相同的方式处理不同的容器

#include <iostream>
#include <vector>

//std::vector<int> vec = { 1, 2, 3, 4, 5 };
//std::vector<int>::iterator it;
//
//int main()
//{
//	for (it = vec.begin(); it != vec.end(); ++it)
//	{
//		std::cout << *it << " ";
//	}
//	return 0;
//}

//迭代器的类型
//1.输入迭代器：只能单向遍历容器，读取元素；适用于只读操作
//2.输出迭代器：只能单向遍历容器，写入元素；适用于只写操作
//3.前向迭代器：支持单向遍历容器，且能够多次读取相同的元素，适用于大多数容器，支持读写操作
//4.双向迭代器：支持双向遍历容器，可以向前和向后移动；适用于std::list和一些其他容器
//5.随机访问迭代器：支持像指针一样的任意位置访问，能够支持加法、减法等运算；适用于std::vector和std::deque等容器
